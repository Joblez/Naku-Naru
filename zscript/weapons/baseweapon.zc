
//How did you even get here?

class NAKUWEAPON : Doomweapon replaces DoomWeapon
{
	Default
	{
        Weapon.BobRangeX 0.5;
        Weapon.BobRangeY 0.5;
        Weapon.BobSpeed 1.2;
        Weapon.BobStyle "Alpha";		
		Tag "NakuWeapon";
		inventory.pickupsound "weapon/pickup";		
		Weapon.UpSound "Weapon/Raise";	
		
		}

//Recoil

	action void A_AutoRecoil() {
		if (GetCvar("recoil_toggle") == 1)
		{
			A_SetPitch(pitch - 0.5);	
			A_Recoil(0.1);	
			A_Quake(2,2,0,20);		
			}
	 
		}

				
				


	action void A_ShotgunRecoil() {
		if (GetCvar("recoil_toggle") == 1)
		{				
			A_Recoil(0.4);
			A_SetPitch(pitch - 1);
			A_Quake(4,6,0,20);
			}
		
		}
 
	action void A_RevolverRecoil() {
 
		if (GetCvar("recoil_toggle") == 1)
		{
				
		A_Recoil(0.1);
		A_SetPitch(pitch - 0.4);
		A_Quake(3,3,0,20);
		}
 
	}
//Casings

action void A_CasingRifle() {
	if (GetCvar("casing_toggle") == 1)
	{
		A_FireProjectile("ARCaseSpawn",0,0,3,-16);
		}
	 
 }


action void A_CasingShotgun() {
    if (GetCvar("casing_toggle") == 1)
	{
		A_FireProjectile("ShellCaseSpawn",0,0,10,6);
		}
	
 }

action void A_CasingSMG() {
    if (GetCvar("casing_toggle") == 1)
	{
	
		A_FireProjectile("SMGCaseSpawn",0,0,6,-13);
			
		}
}			



//Smoke

action void A_ShotgunSmoke() {

		if (GetCvar("smoke_toggle") == 1)
			{
			
				A_FireProjectile("SmokeSpawner",0,0,0);
				A_FireProjectile("SmokeSpawner",0,0,0);	
				A_FireProjectile("SmokeSpawner",0,0,0);
				A_FireProjectile("SmokeSpawner",0,0,0);
				A_FireProjectile("ShotSparks",frandom(-8,8),false,0,8,FPF_NOAUTOAIM,frandom(-4,4));
				A_FireProjectile("ShotSparks",frandom(-8,8),false,0,8,FPF_NOAUTOAIM,frandom(-4,4));
				A_FireProjectile("ShotSparks",frandom(-8,8),false,0,8,FPF_NOAUTOAIM,frandom(-4,4));
				A_FireProjectile("ShotSparks",frandom(-8,8),false,0,8,FPF_NOAUTOAIM,frandom(-4,4));
				A_FireProjectile("ShotSparks",frandom(-8,8),false,0,8,FPF_NOAUTOAIM,frandom(-4,4));
				A_FireProjectile("ShotSparks",frandom(-8,8),false,0,8,FPF_NOAUTOAIM,frandom(-4,4));
				A_FireProjectile("ShotSparks",frandom(-8,8),false,0,8,FPF_NOAUTOAIM,frandom(-4,4));
				A_FireProjectile("ShotSparks",frandom(-8,8),false,0,8,FPF_NOAUTOAIM,frandom(-4,4));					
			}

}

action void A_SingleSmoke() {

		if (GetCvar("smoke_toggle") == 1)
			{
			
				A_FireProjectile("SmokeSpawner",0,0,0);			
			}

}

States
{
	Load: //this name is irrelevant
    PSFL ABCDE 0;
	TPFF ABCDE 0;
	FLRH ABCDE 0;
	} 

}	

class SwingCheck : inventory
{
	Default
	{
	Inventory.Maxamount 1;
	}
}

Class PlasmaSpawner : Actor replaces Plasmarifle
{
	Default
	{
   +NOCLIP;
   +dontsplash;
   +notimefreeze;
   -ACTIVATEIMPACT;
   }
   States
   {
   Spawn:
      TNT1 A 1;
      TNT1 A 1 {
	  
	  if (GetCvar("plasma_toggle") == 1) {
	  A_SpawnProjectile("Type89",10,4,random(-85,-95),2,random(30,60));
	  }
	  else {
	  A_SpawnProjectile("Type96",10,4,random(-85,-95),2,random(30,60));	  
	  }
	  
	 }
      Stop;
   }
}

class SmallChunkyAmmo : Actor replaces Cell
{
	Default
	{
   Speed 20;
   PROJECTILE;
   +NOCLIP;
   +dontsplash;
   +notimefreeze;
   -ACTIVATEIMPACT;
   }
   States
   {
   Spawn:
      TNT1 A 1;
      TNT1 A 1 {
	  
	  if (GetCvar("plasma_toggle") == 1) {
	  A_SpawnProjectile("Ammo556",10,4,random(-85,-95),2,random(30,60));
	  }
	  else {
	  A_SpawnProjectile("Ammo77",10,4,random(-85,-95),2,random(30,60));	  
	  }
	  
	 }
      Stop;
   }
}


class BigChunkyAmmo : Actor replaces CellPack
{
	Default
	{
   Speed 20;
   PROJECTILE;
   +NOCLIP;
   +dontsplash;
   +notimefreeze;
   -ACTIVATEIMPACT;
   }
   States
   {
   Spawn:
      TNT1 A 1;
      TNT1 A 1 {
	  
	  if (GetCvar("plasma_toggle") == 1) {
	  A_SpawnProjectile("556BigBox",10,4,random(-85,-95),2,random(30,60));
	  }
	  else {
	  A_SpawnProjectile("77BigBox",10,4,random(-85,-95),2,random(30,60));	  
	  }
	  
	 }
      Stop;
   }
}